version: '3.8'

services:
  crypto-bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: crypto-alert-bot
    restart: unless-stopped
    
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      - CHECK_INTERVAL=${CHECK_INTERVAL:-300}
      - DB_PATH=/app/data/subs.db
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    
    volumes:
      # Persisti database e logs
      - bot_data:/app/data
      - bot_logs:/app/logs
      # Mount config se necessario
      - ./config:/app/config:ro
    
    # Limiti risorse
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Network personalizzato
    networks:
      - bot-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Logging configurato
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels per organizzazione
    labels:
      - "project=crypto-alert-bot"
      - "environment=production"
      - "maintainer=metalcoder"

  # Servizio monitoring opzionale
  monitoring:
    image: prom/prometheus:latest
    container_name: crypto-bot-monitoring
    restart: unless-stopped
    profiles:
      - monitoring
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    networks:
      - bot-network
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Backup automatico database
  backup:
    image: alpine:latest
    container_name: crypto-bot-backup
    restart: unless-stopped
    profiles:
      - backup
    
    volumes:
      - bot_data:/data:ro
      - bot_backups:/backups
    
    environment:
      - BACKUP_RETENTION=7
    
    command: >
      sh -c "
        while true; do
          echo 'Creating backup...'
          cp /data/subs.db /backups/subs_$(date +%Y%m%d_%H%M%S).db
          find /backups -name 'subs_*.db' -mtime +$BACKUP_RETENTION -delete
          echo 'Backup completed'
          sleep 86400
        done
      "

volumes:
  bot_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  
  bot_logs:
    driver: local
    driver_opts:
      type: none  
      o: bind
      device: ./logs
  
  bot_backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./backups
  
  prometheus_data:
    driver: local

networks:
  bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16